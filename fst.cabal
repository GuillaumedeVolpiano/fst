name:                fst
version:             0.10.0.0
synopsis:            Finite state transducers
description:         Fst is an application for construction and running of
                     finite state transducers, as based on the concepts
                     of transducers and regular relations developed by Xerox.
                     The syntax of Xerox's fst program has functioned as an
                     inspiration for the syntax of fstStudio.
                     .
                     The application was written purely in Haskell,
                     and is intended to be a tool for the Haskell
                     programmer, especially for ones that develop
                     language applications.
                     .
                     This package provides an interactive shell for
                     parsing transducers specified in a specialized
                     FST language. See "Data.FST.FSTStudio".
                     .
                     This package also provides a programmer's
                     interface for building and applying
                     transducers. See "Data.FST.TransducerInterface".

category:            Compilers/Interpreters
license:             BSD3
license-file:        LICENSE
author:              Markus Forsberg
maintainer:          Baldur BlÃ¶ndal, John J. Camilleri
homepage:            http://www.cse.chalmers.se/alumni/markus/fstStudio/
package-url:         https://github.com/johnjcamilleri/fst
bug-reports:         https://github.com/johnjcamilleri/fst/issues
build-type:          Simple
cabal-version:       >= 1.8

data-files:          tests/drink.fst, tests/email.fst

library
        build-depends:       base>=4 && <5, array, mtl
        exposed-modules:     Data.FST.Automaton,
                             Data.FST.AutomatonInterface,
                             Data.FST.AutomatonTypes,
                             Data.FST.Complete,
                             Data.FST.Deterministic,
                             Data.FST.DeterministicT,
                             Data.FST.EpsilonFreeT,
                             Data.FST.LBFA,
                             Data.FST.LBFT,
                             Data.FST.NReg,
                             Data.FST.RegTypes,
                             Data.FST.Reversal,
                             Data.FST.ReversalT,
                             Data.FST.RRegTypes,
                             Data.FST.RunTransducer,
                             Data.FST.Transducer,
                             Data.FST.TransducerInterface,
                             Data.FST.TransducerTypes,
                             Data.FST.FSTStudio

        other-modules:       Data.FST.Alex,
                             Data.FST.Arguments,
                             Data.FST.Info,
                             Data.FST.Lexer,
                             Data.FST.Parse,
                             Data.FST.Utils

        ghc-prof-options:    -prof -auto-all

executable fststudio
        main-is:             Main.hs
        ghc-prof-options:    -prof -auto-all
        build-depends:       base, array, mtl, transformers, haskeline

test-suite test-fst
        type:                exitcode-stdio-1.0
        hs-source-dirs:      tests
        main-is:             properties.hs
        build-depends:       base, fst, QuickCheck
